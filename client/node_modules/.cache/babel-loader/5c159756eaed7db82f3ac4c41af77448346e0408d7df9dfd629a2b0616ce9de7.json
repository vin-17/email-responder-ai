{"ast":null,"code":"var _jsxFileName = \"/Users/vineetsingh/Developer/Project Work/email-response-app/src/components/EmailResponderForm/EmailResponderForm.js\",\n  _s = $RefreshSig$();\nimport \"./emailResponderForm.css\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailResponderForm() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [mood, setMood] = useState('professional');\n  const [language, setLanguage] = useState('english-uk');\n  const [emailType, setEmailType] = useState('personal');\n  const [name, setName] = useState('');\n  const [context, setContext] = useState('');\n  const [response, setResponse] = useState('');\n  async function formSubmit(e) {\n    // Prevent the default form submission behavior\n    e.preventDefault();\n    // Clear any previous responses\n    setResponse('');\n    try {\n      // Send a POST request to the /gpt endpoint of our Express server\n      const apiResponse = await fetch('http://127.0.0.1:5050/gpt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message,\n          mood,\n          context,\n          emailType,\n          name,\n          language\n        })\n      });\n\n      // Extract the response data as JSON\n      const data = await apiResponse.json();\n\n      // Set the response message to the message property of the returned JSON data\n      setResponse(data.message);\n      console.log(data.message);\n    } catch (error) {\n      // If an error occurs during the fetch request, set the response message to the error message\n      setResponse(error);\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Language:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: language,\n          onChange: e => setLanguage(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"english-uk\",\n            children: \"\\uD83C\\uDDEC\\uD83C\\uDDE7 English (UK)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"English-us\",\n            children: \"\\uD83C\\uDDFA\\uD83C\\uDDF8 English (US)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Norwegian\",\n            children: \"\\uD83C\\uDDF3\\uD83C\\uDDF4 Norwegian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"german\",\n            children: \"\\uD83C\\uDDE9\\uD83C\\uDDEA German\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: emailType,\n          onChange: e => setEmailType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"personal\",\n            children: \"Personal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"business\",\n            children: \"Business\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"The tone of Response:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: mood,\n          onChange: e => setMood(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"professional\",\n            children: \"Professional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"friendly\",\n            children: \"Friendly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"funny\",\n            children: \"Funny\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"formal\",\n            children: \"Formal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"negative\",\n            children: \"Negative\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Your Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Add Extra Context:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: context,\n          onChange: e => setContext(e.target.value),\n          placeholder: \"Extra Context\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email you want to respond to:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"emailToReply\",\n          placeholder: \"Place the text of the email you want to respond to here\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Email Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n_s(EmailResponderForm, \"TUKAnAxCiwDJj7ks3VXyNL6lcZE=\");\n_c = EmailResponderForm;\nexport default EmailResponderForm;\nvar _c;\n$RefreshReg$(_c, \"EmailResponderForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EmailResponderForm","_s","message","setMessage","mood","setMood","language","setLanguage","emailType","setEmailType","name","setName","context","setContext","response","setResponse","formSubmit","e","preventDefault","apiResponse","fetch","method","headers","body","JSON","stringify","data","json","console","log","error","children","onSubmit","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","id","_c","$RefreshReg$"],"sources":["/Users/vineetsingh/Developer/Project Work/email-response-app/src/components/EmailResponderForm/EmailResponderForm.js"],"sourcesContent":["import \"./emailResponderForm.css\"\nimport React, { useState } from 'react';\nfunction EmailResponderForm() {\n  const [message, setMessage] = useState('');\n  const [mood, setMood] = useState('professional');\n  const [language, setLanguage] = useState('english-uk');\n  const [emailType, setEmailType] = useState('personal');\n  const [name, setName] = useState('');\n  const [context, setContext] = useState('');\n  const [response, setResponse] = useState('');\n\n  async function formSubmit(e) {\n    // Prevent the default form submission behavior\n    e.preventDefault();\n    // Clear any previous responses\n    setResponse('');\n  \n    \n  \n    try {\n      // Send a POST request to the /gpt endpoint of our Express server\n      const apiResponse = await fetch('http://127.0.0.1:5050/gpt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message,\n          mood,\n          context,\n          emailType,\n          name,\n          language,\n        }),\n      });\n  \n      // Extract the response data as JSON\n      const data = await apiResponse.json();\n  \n      // Set the response message to the message property of the returned JSON data\n      setResponse(data.message);\n      console.log(data.message)\n    } catch (error) {\n      // If an error occurs during the fetch request, set the response message to the error message\n      setResponse(error);\n      console.log(error)\n    }\n  }\n  \nreturn (\n  <div>\n    <form onSubmit={formSubmit}>\n      <label>\n        Language:\n        <select\n          value={language}\n          onChange={(e) => setLanguage(e.target.value)}\n        >\n          <option value=\"english-uk\">🇬🇧 English (UK)</option>\n          <option value=\"English-us\">🇺🇸 English (US)</option>\n          <option value=\"Norwegian\">🇳🇴 Norwegian</option>\n          <option value=\"german\">🇩🇪 German</option>\n        </select>\n      </label>\n      <label>\n        Email Type:\n        <select\n          value={emailType}\n          onChange={(e) => setEmailType(e.target.value)}\n        >\n          <option value=\"personal\">Personal</option>\n          <option value=\"business\">Business</option>\n        </select>\n      </label>\n      <label>\n        The tone of Response:\n        <select value={mood} onChange={(e) => setMood(e.target.value)}>\n          <option value=\"professional\">Professional</option>\n          <option value=\"friendly\">Friendly</option>\n          <option value=\"funny\">Funny</option>\n          <option value=\"formal\">Formal</option>\n          <option value=\"negative\">Negative</option>\n        </select>\n      </label>\n    <label>\n      Your Name:\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n    </label>\n    <label>\n      Add Extra Context:\n      <input\n        type=\"text\"\n        value={context}\n        onChange={(e) => setContext(e.target.value)}\n        placeholder=\"Extra Context\"\n      />\n    </label>\n    <label>\n      Email you want to respond to:\n      <textarea\n              id=\"emailToReply\"\n              placeholder=\"Place the text of the email you want to respond to here\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n    </label>\n    <button type=\"submit\">Submit</button>\n    </form>\n    \n\n      <section>\n        <h2>Email Response</h2>\n        <pre>{response}</pre>\n      </section>\n    </div>\n  );\n}\nexport default EmailResponderForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}